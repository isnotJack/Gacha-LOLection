openapi: 3.0.0
info:
  title: Profile Setting API
  version: 1.0.0
  description: API for the managing of the profile. It allows a player to modify its account and it allows an admin to check/modify users profile, check currency transaction history of a player and check market history of a player

servers:
  - url: http://.../profsetting
paths:
  /modify:
    patch:
      summary: Modification of account
      description: Modification of the account is valid for both player and admin. Of course, a player can modify only its own credentials.
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the player to modify its information
          schema:
            type: string
        - name: info
          in: query
          required: false
          description: Information of the player to be modified
          schema:
            type: string
      responses:
        '200':
          description: Information modified successfully
        '400':
          description: Error in the modification of the information

  /checkprofile:
    get:
      summary: Check user profile
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the player to see its profile
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: User not existing

  /checktransactions:
    get:
      summary: Check currency transaction history of a player
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the player to see its transaction history
          schema:
            type: string
      responses:
              '200':
                description: Transactions History
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        transactions:
                          type: array
                          transaction:
                            type: object
                            properties:
                              amount:
                                type: number
                                format: float
                                description: Amount of money transferred, can be positive (e.g., +10) or negative (e.g., -100)
                              date:
                                type: string
                                format: date-time
                                description: Date of the transaction   
                              currency:
                                type: string
                                enum: [euro, memecoin]
                                description: Currency type of the transaction
              '401':
                  description: User not existing
          
  /checkmarket:
    get:
      summary: Check market history of a player
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the player to see its market history
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: User not existing
          
  /retrieve_gachacollection:
    get:
      summary: Get the gacha collection of a player
      description: Retrieve the gacha collection of the logged-in player to see how many gacha items they have and need to complete the collection.
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the player to retrieve their gacha collection.
          schema:
            type: string
      responses:
        '200':
          description: The collection of gacha is returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  gacha_collected:
                    type: array
                    items:
                      type: object
                      properties:
                        gacha_id:
                          type: string
                        gacha_name:
                          type: string
                        description:
                          type: string
                        rarity:
                          type: string
                        collected_date:
                          type: string
                        img:
                          type: string
                          format: uri 
                  total_gacha:
                    type: integer
                  remaining_to_complete:
                    type: integer
        '401':
          description: User not found or not authorized
          
  /info_gachacollection:
    get:
      summary: Get the details of a specific gacha in the player's collection
      description: Retrieve detailed information about a specific gacha item from the player's collection using the gacha ID.
      parameters:
        - name: username
          in: query
          required: true
          description: Username of the player who owns the gacha.
          schema:
            type: string
        - name: gacha_id
          in: query
          required: true
          description: ID of the specific gacha to get its details.
          schema:
            type: string
      responses:
        '200':
          description: Gacha details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  gacha_id:
                    type: string
                  gacha_name:
                    type: string
                  description:
                    type: string
                  rarity:
                    type: string
                  collected_date:
                    type: string
                  img:
                    type: string
                    format: uri 
        '401':
          description: User not found or not authorized
        '404':
          description: Gacha not found in the player's collection
  


