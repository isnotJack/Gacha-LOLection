openapi: 3.0.0
info:
  title: Auction Market Api
  version: 1.0.0
  description: An Api to manage the auction market, enancing the user/admin to see, create, modify and bid to auctions

servers:
  - url: http://.../auctionMarket
paths:
  /see:
    get:
      summary: See the active auctions, the old auctions or just one auction
      parameters:
        - name: auction_id
          in: query
          required: false
          description: id of the auction that the user (admin) want to see ( shows all if not present)
          schema:
            type: integer

        - name: status
          in: query
          required: false
          description: Parameter to select old auctions or active auctions. (active by default)
          schema:
            type: string
            enum: [active, old]
      responses:
        '200':
          description: List of active auctions
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      type: object
                      properties:
                        auct_id:
                          type: integer
                          description: Auction ID
                        gatcha_id:
                          type: integer
                          description: Gatcha ID
                        Winner:
                          type: integer
                          description: Current Winner ID
                        currentBid:
                          type: number
                          format: float
                          description: Current bid of the auction
                        endDate:
                          type: string
                          format: date-time
                          description: Auction end date and time
                                          
        '400':
              description: Invalid Input
        '404':
              description: Service down or invalid operation
  /create:
    post:
      summary: create a new auction
      parameters: 
        - name: seller_id
          in: query
          required: true
          description: id of the seller (the user that create a new auction)
          schema:
            type: integer

        - name: gatcha_id
          in: query
          required: true
          description: id of gatcha which will be auctioned off 
          schema:
            type: integer

        - name: endDate
          in: query
          required: true
          description: end date of the auction
          schema:
            type: string
            format: date-time
        
        - name: basePrice
          in: query
          required: true
          description: base price for the auction
          schema:
            type: number
            format: float
              
      responses:
        '200':
          description: Auction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the newly created auction
                  message:
                    type: string
                    example: Auction created successfully                            
        '400':
              description: Invalid Input
        '404':
              description: Service down or invalid operation
  /modify:
    patch:
      summary: modify an existent auction (admin)
      parameters: 
        - name: auction_id
          in: query
          required: true
          description: id of the auction
          schema:
            type: integer

        - name: seller_id
          in: query
          required: false
          description: id of the seller (the user that created that auction) (if not present, remains the same)
          schema:
            type: integer

        - name: gatcha_id
          in: query
          required: false
          description: id of gatcha which will be auctioned off (if not present, remains the same)
          schema:
            type: integer

        - name: endDate
          in: query
          required: false
          description: end date of the auction (if not present, remains the same)
          schema:
            type: string
            format: date-time
          
        - name: basePrice
          in: query
          required: false
          description: base price for the auction (if not present, remains the same)
          schema:
            type: number
            format: float
          
      responses:
        '200':
          description: Auction updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the updated auction
                  message:
                    type: string
                    example: Auction updated successfully                            
        '400':
              description: Invalid Input
        '404':
              description: Service down or invalid operation
  /bid:
    patch:
      summary: bid for an auction
      parameters: 
        - name: bidder_id
          in: query
          required: true
          description: id of the bidder (the user that bid for the auction) 
          schema:
            type: integer

        - name: auction_id
          in: query
          required: true
          description: id of the auction 
          schema:
            type: integer
        
        - name: newBid
          in: query
          required: true
          description: the bid to participate to the auction
          schema:
            type: number
            format: float
      responses:
        '200':
          description: Bid updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: New bid sets                           
        '400':
              description: Invalid Input
        '404':
              description: Service down or invalid operation          
        
  /gatcha_receive:
    post:
      summary: Receive a gatcha after winning it (talks with profile APIs)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auction_id:
                  type: integer
                  description: ID of the auction associated with the gatcha
                winner_username:
                  type: string
                  description: Username of the user who won the gatcha
                gatcha_name:
                  type: string
                  description: Name of the gatcha
      responses:
        '200':
          description: Gatcha correctly received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Gatcha correctly received                           
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid input
        '404':
          description: Service down or invalid operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Auction not found or service is down


  /auction_lost:
    post:
      summary: receive currency for losing an auction (invoke receive API on payment with system_id as payer)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: id of the user that has lost, he will receive back the money.
                amount:
                  type: number
                  format: float
                  description: The amount of memecoins returned back.
      responses:
        '200':
          description: Money correctly returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                      type: integer
                      description: The ID of the transaction
                  message:
                    type: string
                    example: Money correctly returned                       
        '400':
              description: Invalid Input
        '404':
              description: Service down or invalid operation
              
  /auction_terminated:
    post:
      summary: receive currency because one auction has terminated with a winner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payer_id:
                  type: integer
                  description: id of the auction winner
                receiver_id:
                  type: integer
                  description: id of the creator of the auction
                amount:
                  type: number
                  format: float
                  description: amount of money payed to win the auction      
      responses:
        '200':
          description: Money correctly received
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                      type: integer
                      description: The ID of the transaction
                  message:
                    type: string
                    example: Money correctly received                       
        '400':
              description: Invalid Input
        '404':
              description: Service down or invalid operation
  


